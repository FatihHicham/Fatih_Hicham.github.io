{"version":3,"sources":["Components/landingpage.js","Components/aboutme.js","Components/resume.js","Components/projects.js","Components/contact.js","Components/main.js","App.js","serviceWorker.js","index.js","Components/logo.png"],"names":["Landing","style","width","margin","className","col","src","logo","alt","href","rel","target","class","aria-hidden","Component","About","Resume","Projetcs","Contact","Main","exact","path","component","Projects","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"6OAwCeA,E,iLAnCP,OACI,yBAAMC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAClC,kBAAC,OAAD,CAAMC,UAAU,gBACZ,kBAAC,OAAD,CAAMC,IAAK,IACP,yBAAKD,UAAU,aAAaE,IAAKC,IAAMC,IAAI,SAC3C,yBAAKJ,UAAU,eACX,yDACA,6BACA,wEACA,yBAAKA,UAAU,gBAEX,uBAAGK,KAAK,sDAAsDC,IAAI,sBAAsBC,OAAO,UAC3F,uBAAGC,MAAM,wBAAwBC,cAAY,UAGjD,uBAAGJ,KAAK,iCAAiCC,IAAI,sBAAsBC,OAAO,UACtE,uBAAGC,MAAM,sBAAsBC,cAAY,UAG/C,uBAAGJ,KAAK,2BAA2BC,IAAI,sBAAsBC,OAAO,UAChE,uBAAGC,MAAM,eAAeC,cAAY,UAGxC,uBAAGJ,KAAK,8EAA8EC,IAAI,sBAAsBC,OAAO,UACnH,uBAAGC,MAAM,uBAAuBC,cAAY,mB,GA1B1DC,aCQPC,E,iLAPP,OACI,6BACI,kD,GAJID,aCSLE,E,iLAPP,OACI,6BACI,gD,GAJKF,aCSNG,E,iLAPP,OACI,6BACI,kD,GAJOH,aCSRI,E,iLAPP,OACI,6BACI,kD,GAJMJ,aCiBPK,EATF,kBACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtB,IACjC,kBAAC,IAAD,CAAOqB,KAAK,WAAWC,UAAWP,IAClC,kBAAC,IAAD,CAAOM,KAAK,WAAWC,UAAWJ,IAClC,kBAAC,IAAD,CAAOG,KAAK,YAAYC,UAAWC,IACnC,kBAAC,IAAD,CAAOF,KAAK,UAAUC,UAAWN,M,QCoB1BQ,E,iLA5BX,OACE,yBAAKpB,UAAU,oBACb,kBAAC,SAAD,KACE,kBAAC,SAAD,CAAQA,UAAU,eAAeqB,MAAM,QAAQC,QAAM,GACnD,kBAAC,aAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGJ,kBAAC,SAAD,CAAQF,MAAM,SACZ,kBAAC,aAAD,KACE,kBAAC,IAAD,CAAME,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGJ,kBAAC,UAAD,KACE,yBAAKvB,UAAU,iBACf,kBAAC,EAAD,a,GAvBMU,aCMEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCTNC,IAASC,OACL,kBAAC,IAAD,CAAeC,SAAS,eACpB,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.458351a4.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport logo from '../Components/logo.png';\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            < div style={{ width: '100%', margin: 'auto' }}>\r\n                <Grid className=\"landing-grid\">\r\n                    <Cell col={12}>\r\n                        <img className=\"avatar-img\" src={logo} alt=\"logo\" />\r\n                        <div className=\"banner-text\">\r\n                            <h1>Full Stack Web Developper</h1>\r\n                            <hr />\r\n                            <p>HTML/CSS | BOOTSTRAP | REACT JS | NODE JS</p>\r\n                            <div className=\"social-links\">\r\n                                {/*Linkdin */}\r\n                                <a href=\"https://www.linkedin.com/in/hicham-fatih-6ba462151/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i class=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                                </a>\r\n                                {/*Github */}\r\n                                <a href=\"https://github.com/FatihHicham\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i class=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n                                </a>\r\n                                {/*Gitlab */}\r\n                                <a href=\"https://gitlab.com/Hixam\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i class=\"fa fa-gitlab\" aria-hidden=\"true\" />\r\n                                </a>\r\n                                {/*Youtube */}\r\n                                <a href=\"https://www.youtube.com/channel/UCVKSQovJTQXrtKIIFhpeKNQ?view_as=subscriber\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i class=\"fa fa-youtube-square\" aria-hidden=\"true\" />\r\n                                </a>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default Landing;","import React, { Component } from 'react'\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>About me page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default About;","import React, { Component } from 'react'\r\n\r\nclass Resume extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Resume page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Resume;","import React, { Component } from 'react'\r\n\r\nclass Projetcs extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Projects page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Projetcs;","import React, { Component } from 'react'\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Contacts page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Landing from './landingpage';\r\nimport About from './aboutme';\r\nimport Resume from './resume';\r\nimport Projects from './projects';\r\nimport Contact from './contact'\r\n\r\n\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Landing} />\r\n        <Route path=\"/aboutme\" component={About} />\r\n        <Route path=\"/contact\" component={Contact} />\r\n        <Route path=\"/projects\" component={Projects} />\r\n        <Route path=\"/resume\" component={Resume} />\r\n    </Switch>\r\n)\r\nexport default Main;","import React, { Component } from 'react';\nimport './App.css';\nimport { Navigation, Content, Header, Drawer, Layout } from 'react-mdl';\nimport Main from './Components/main';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n        <Layout>\n          <Header className=\"header-color\" title=\"Title\" scroll>\n            <Navigation>\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/aboutme\">About Me</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Header>\n          <Drawer title=\"Title\">\n            <Navigation>\n              <Link to=\"/resume\">Resume</Link>\n              <Link to=\"/aboutme\">About Me</Link>\n              <Link to=\"/projects\">Projects</Link>\n              <Link to=\"/contact\">Contact</Link>\n            </Navigation>\n          </Drawer>\n          <Content>\n            <div className=\"page-content\" />\n            <Main />\n          </Content>\n        </Layout>\n      </div>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter basename=\"myportfolio\">\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.e58d6d40.png\";"],"sourceRoot":""}